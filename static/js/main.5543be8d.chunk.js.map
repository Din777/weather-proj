{"version":3,"sources":["cmps/AppHeader.jsx","services/utilService.js","cmps/ForecastPreview.jsx","cmps/ForecastsList.jsx","services/storageService.js","services/cityService.js","cmps/Form.jsx","cmps/Weather.jsx","services/weatherService.js","pages/Home.jsx","cmps/FavPreview.jsx","cmps/FavList.jsx","pages/Fav.jsx","cmps/AppFooter.jsx","App.jsx","reportWebVitals.js","store/store.js","index.js"],"names":["AppHeader","className","to","dateConverter","Date","toGMTString","nameConverter","name","split","map","word","toUpperCase","substring","join","tempConverter","num","parseInt","weeklyDaysConverter","date","string","weekday","Array","day","getDay","_getDay","ForecastPreview","temp","utilService","this","props","getConvertDate","getConvertTemp","Temperature","Maximum","Value","Minimum","Day","IconPhrase","React","Component","ForecastsList","fiveDayForecast","store","key","value","localStorage","JSON","stringify","load","defaultValue","parse","axios","require","API_KEY","baseUrl","STORAGE_KEY","gFavorites","msg","cityConverter","cityName","url","_urlConverter","get","then","res","data","catch","err","alert","console","log","updateFav","cityToSave","cityCode","cityIdx","cityId","findIndex","city","splice","push","storageService","queryFav","favCities","Form","cityObj","toggleFav","getWeather","action","onSubmit","type","placeholder","autoComplete","onClick","cityService","isFavorite","Weather","description","convertTemp","convertUnit","baseCurrDayUrl","base5DayUrl","currWeatherQuery","code","_getCorrectUrl","_get5DayCorrectUrl","Home","state","unit","getCurrForecast","a","weatherService","currWeather","setState","Unit","getFiveDaysForecast","fiveDaysWeather","DailyForecasts","ev","preventDefault","cityForSearch","target","elements","convertCityName","Key","onToggleFav","spellCheck","savedCurrWeather","FavPreview","getWeatherToFavCity","favCity","FavList","favCitiesArray","Fav","getFavCitiesArray","favCityArray","AppFooter","App","Fragment","component","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5543be8d.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n\r\nexport function AppHeader() {\r\n    return (\r\n        <section className=\"app-header\">\r\n            <header className=\"flex space-between align-center\">\r\n                <div className=\"header-logo\">\r\n                    <Link to=\"/\">‚òÄÔ∏èMyWeatherApp</Link>\r\n                </div>\r\n                <div className=\"header-menu\">\r\n                    <Link to=\"/\"><span>üå¶</span></Link>\r\n                    <Link to=\"/favorites\"><span>üíé</span></Link>\r\n                </div>\r\n            </header>\r\n        </section>\r\n    )\r\n}","export default {\r\n    dateConverter,\r\n    nameConverter,\r\n    tempConverter,\r\n    weeklyDaysConverter\r\n}\r\n\r\nfunction dateConverter() {\r\n    const newDate = new Date()\r\n    return newDate.toGMTString()\r\n}\r\n\r\nfunction nameConverter(name) {\r\n    const words = name.split(\" \");\r\n    var newName = words.map((word) => {\r\n        return word[0].toUpperCase() + word.substring(1);\r\n    }).join(\" \");\r\n    return newName\r\n}\r\n\r\nfunction tempConverter(num) {\r\n    const newNum = parseInt((num - 32) / 1.8)\r\n    return newNum\r\n}\r\n\r\nfunction weeklyDaysConverter(date) {\r\n    var day = _getDay(date)\r\n    return day\r\n}\r\n\r\nfunction _getDay(string) {\r\n    var weekday = new Array(7);\r\n    weekday[0] = \"Sun\";\r\n    weekday[1] = \"Mon\";\r\n    weekday[2] = \"Tue\";\r\n    weekday[3] = \"Wed\";\r\n    weekday[4] = \"Thu\";\r\n    weekday[5] = \"Fri\";\r\n    weekday[6] = \"Sat\";\r\n    var date = new Date(string);\r\n    var day = date.getDay();\r\n    return weekday[day];\r\n}","import React from 'react'\r\nimport utilService from '../services/utilService'\r\n\r\nexport class ForecastPreview extends React.Component {\r\n\r\n    getConvertTemp(temp) {\r\n        var newTemp = utilService.tempConverter(temp)\r\n        return newTemp\r\n    }\r\n\r\n    getConvertDate(date) {\r\n        var convertDate = utilService.weeklyDaysConverter(date)\r\n        return convertDate\r\n    }\r\n\r\n    render() {\r\n        const { day } = this.props\r\n        return (\r\n            <div className=\"forecast\">\r\n                <div className=\"info\"><p>{this.getConvertDate(day.Date)}</p></div>\r\n                <div className=\"info\"><p>Max: {this.getConvertTemp(day.Temperature.Maximum.Value)}&deg;C</p></div>\r\n                <div className=\"info\">  <p>Min: {this.getConvertTemp(day.Temperature.Minimum.Value)}&deg;C</p></div>\r\n                <div className=\"info\"><p>{day.Day.IconPhrase}</p></div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { ForecastPreview } from './ForecastPreview'\r\n\r\nexport function ForecastsList({ fiveDayForecast }) {\r\n    return (\r\n        <div className=\"list-container main-layout\">\r\n            <div className=\"cards-container\">\r\n                {fiveDayForecast.map(day => {\r\n                    return <ForecastPreview key={day.Date} day={day} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","export default {\r\n    store,\r\n    load\r\n}\r\n\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key];\r\n    if (!value) return defaultValue\r\n    else return JSON.parse(value);\r\n}","import storageService from './storageService'\r\n\r\nconst axios = require('axios');\r\n\r\nconst API_KEY = \"N3cAuq3Xbnocf8JevGGcm2kkxelKEDPY\"\r\n\r\nconst baseUrl = 'http://dataservice.accuweather.com/locations/v1/cities/'\r\n\r\nconst STORAGE_KEY = 'favs'\r\n\r\nvar gFavorites = []\r\nvar msg = ''\r\n\r\nexport default {\r\n    cityConverter,\r\n    updateFav,\r\n    queryFav\r\n}\r\n\r\nfunction queryFav() {\r\n    var favCities = storageService.load(STORAGE_KEY)\r\n    gFavorites = favCities\r\n    return gFavorites\r\n}\r\n\r\nfunction cityConverter(cityName) {\r\n    var url = _urlConverter(cityName)\r\n    return axios.get(url)\r\n        .then(res => res.data)\r\n        .catch(err => {\r\n            alert('Can not find this location. Please try another one. ');\r\n            console.log('ERR city service-cityConverter :', err);\r\n        })\r\n}\r\n\r\nfunction updateFav(cityToSave) {\r\n    if (!cityToSave.cityCode) return msg = 'Please enter some location'\r\n    else {\r\n        const cityIdx = _getIdxById(cityToSave.cityCode)\r\n        if (cityIdx >= 0) {\r\n            gFavorites.splice(cityIdx, 1)\r\n            msg = `${cityToSave.city} is successfully removed.`\r\n        }\r\n        else {\r\n            gFavorites.push(cityToSave)\r\n            msg = `${cityToSave.city} was added to favorites!`\r\n        }\r\n    }\r\n    storageService.store(STORAGE_KEY, gFavorites)\r\n    return msg\r\n}\r\n\r\nfunction _getIdxById(cityId) {\r\n    return gFavorites.findIndex(city => city.cityCode === cityId)\r\n}\r\n\r\nfunction _urlConverter(cityName) {\r\n    const newUrl = `${baseUrl}search?apikey=${API_KEY}&q=${cityName}`\r\n    return newUrl\r\n}","import cityService from '../services/cityService';\r\n\r\nexport function Form({ cityObj, toggleFav, getWeather }) {\r\n\r\n    function editFavorites() {\r\n        var msg = cityService.updateFav(cityObj)\r\n        alert(msg)\r\n        toggleFav(cityObj)\r\n    }\r\n\r\n    return (\r\n        < form className=\"main-layout\" action=\"\" onSubmit={getWeather} >\r\n            <input type=\"text\" name=\"city\" placeholder=\"City...\" autoComplete=\"off\" />\r\n            <button>Get Weather</button>\r\n            <button onClick={editFavorites}>\r\n                {cityObj.isFavorite && <span>Remove from favorites</span>}\r\n                {!cityObj.isFavorite && <span>Add to favorites</span>}\r\n            </button>\r\n        </form >)\r\n}","import React from 'react'\r\n\r\nexport function Weather({ cityObj }) {\r\n    return (\r\n        <div className=\"weather-cmp main-layout\">\r\n            {cityObj.date && <p>{cityObj.date}</p>}\r\n            {cityObj.description && <p>{cityObj.description}</p>}\r\n            <div className=\"location-desc\">\r\n                <div className=\"loc-and-temp flex\">\r\n                    <div className=\"flex\">\r\n                        {cityObj.isFavorite && <p>üíé</p>}\r\n                        {cityObj.city && <span>{cityObj.city} </span>}\r\n                    </div>\r\n                    {cityObj.convertTemp && <p>{cityObj.convertTemp}&deg;{cityObj.convertUnit}</p>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","const axios = require('axios');\r\n\r\nconst API_KEY = \"N3cAuq3Xbnocf8JevGGcm2kkxelKEDPY\"\r\n\r\nconst baseCurrDayUrl = 'http://dataservice.accuweather.com/forecasts/v1/hourly/1hour/'\r\nconst base5DayUrl= 'http://dataservice.accuweather.com/forecasts/v1/daily/5day/'\r\n\r\nexport default {\r\n    currWeatherQuery,\r\n    fiveDayForecast\r\n}\r\n\r\nfunction fiveDayForecast(code) {\r\n    var url = _get5DayCorrectUrl(code)\r\n    return axios.get(url)\r\n        .then(res => res.data)\r\n        .catch(err => {\r\n            alert('OOPs, try again');\r\n            console.log('ERR weather service- fiveDayForecast:', err);\r\n        })\r\n}\r\n\r\nfunction currWeatherQuery(code) {\r\n    var url = _getCorrectUrl(code)\r\n    return axios.get(url)\r\n        .then(res => res.data)\r\n        .catch(err => {\r\n            alert('OOPs, try again');\r\n            console.log('ERR weather service- currWeatherQuery:', err);\r\n        })\r\n}\r\n\r\nfunction _getCorrectUrl(code) {\r\n    const newUrl = `${baseCurrDayUrl}${code}?apikey=${API_KEY}`\r\n    return newUrl\r\n}\r\n\r\nfunction _get5DayCorrectUrl(code) {\r\n    const newUrl = `${base5DayUrl}${code}?apikey=${API_KEY}`\r\n    return newUrl\r\n}","import React from 'react'\r\nimport { ForecastsList } from '../cmps/ForecastsList'\r\nimport { Form } from '../cmps/Form'\r\nimport { Weather } from '../cmps/Weather'\r\nimport weatherService from '../services/weatherService'\r\nimport cityService from '../services/cityService'\r\nimport utilService from '../services/utilService'\r\n\r\n\r\nexport class Home extends React.Component {\r\n\r\n    state = {\r\n        city: 'Tel Aviv',\r\n        cityCode: 215854,\r\n        date: utilService.dateConverter(),\r\n        temp: '',\r\n        unit: '',\r\n        convertTemp: '',\r\n        convertUnit: 'C',\r\n        description: '',\r\n        fiveDayForecast: [],\r\n        isFavorite: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCurrForecast()\r\n        this.getFiveDaysForecast()\r\n    }\r\n\r\n    getCurrForecast = async () => {\r\n        const currWeather = await weatherService.currWeatherQuery(this.state.cityCode)\r\n        this.setState({\r\n            temp: currWeather[0].Temperature.Value,\r\n            unit: currWeather[0].Temperature.Unit,\r\n            convertTemp: utilService.tempConverter(currWeather[0].Temperature.Value),\r\n            description: currWeather[0].IconPhrase,\r\n        })\r\n    }\r\n\r\n    getFiveDaysForecast = async () => {\r\n        const fiveDaysWeather = await weatherService.fiveDayForecast(this.state.cityCode)\r\n        this.setState({\r\n            fiveDayForecast: fiveDaysWeather.DailyForecasts\r\n        })\r\n    }\r\n\r\n    getWeather = async (ev) => {\r\n        ev.preventDefault()\r\n        var cityForSearch\r\n        (!ev.target.elements.city.value) ? cityForSearch = this.state.city : cityForSearch = ev.target.elements.city.value\r\n        var convertCityName = utilService.nameConverter(cityForSearch)\r\n        const cityCode = await cityService.cityConverter(convertCityName)\r\n        this.setState({\r\n            city: convertCityName,\r\n            cityCode: cityCode[0].Key,\r\n        })\r\n        this.getCurrForecast()\r\n        this.getFiveDaysForecast()\r\n    }\r\n\r\n    onToggleFav = () => {\r\n        if (this.state.isFavorite) {\r\n            this.setState({\r\n                isFavorite: false\r\n            })\r\n        } else {\r\n            this.setState({\r\n                isFavorite: true\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main-container flex column align-center\">\r\n                <Form getWeather={this.getWeather} spellCheck={this.spellCheck} cityObj={this.state} toggleFav={this.onToggleFav} />\r\n                <Weather cityObj={this.state} />\r\n                {this.state.fiveDayForecast && <ForecastsList fiveDayForecast={this.state.fiveDayForecast} />}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport utilService from '../services/utilService'\r\n\r\nconst savedCurrWeather = [\r\n    {\r\n        \"DateTime\": \"2021-09-23T18:00:00+03:00\",\r\n        \"EpochDateTime\": 1632409200,\r\n        \"WeatherIcon\": 2,\r\n        \"IconPhrase\": \"Mostly sunny\",\r\n        \"HasPrecipitation\": false,\r\n        \"IsDaylight\": true,\r\n        \"Temperature\": {\r\n            \"Value\": 81,\r\n            \"Unit\": \"F\",\r\n            \"UnitType\": 18\r\n        },\r\n        \"PrecipitationProbability\": 0,\r\n        \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/hourly-weather-forecast/215854?day=1&hbhhour=18&lang=en-us\",\r\n        \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/hourly-weather-forecast/215854?day=1&hbhhour=18&lang=en-us\"\r\n    }\r\n]\r\n\r\nexport class FavPreview extends React.Component {\r\n\r\n    state = {\r\n        city: '',\r\n        cityCode: '',\r\n        date: utilService.dateConverter(),\r\n        temp: '',\r\n        unit: '',\r\n        convertTemp: '',\r\n        convertUnit: 'C',\r\n        description: '',\r\n        fiveDayForecast: [],\r\n        isFavorite: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWeatherToFavCity()\r\n    }\r\n\r\n    getWeatherToFavCity() {\r\n        const { favCity } = this.props\r\n        this.setState({\r\n            city: favCity.city,\r\n            cityCode: favCity.cityCode,\r\n            temp: savedCurrWeather[0].Temperature.Value,\r\n            unit: savedCurrWeather[0].Temperature.Unit,\r\n            convertTemp: utilService.tempConverter(savedCurrWeather[0].Temperature.Value),\r\n            description: savedCurrWeather[0].IconPhrase,\r\n            isFavorite: favCity.isFavorite\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fav-forecast\">\r\n                <div className=\"fav-loc-name \">\r\n                    <Link to=\"/\">\r\n                        <p>{this.state.city}</p>\r\n                    </Link>\r\n                </div>\r\n                <p>{this.state.convertTemp}&deg;{this.state.convertUnit}</p>\r\n                <p>{this.state.description}</p>\r\n            </div>\r\n        )\r\n    }\r\n}","import { FavPreview } from \"./FavPreview\"\r\n\r\nexport function FavList({ favCitiesArray }) {\r\n    return (\r\n        <div className=\"list-container main-layout\">\r\n            <div className=\"cards-container\">\r\n                {favCitiesArray.map(favCity => {\r\n                    return <FavPreview favCity={favCity} key={favCity.cityCode} />\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { FavList } from \"../cmps/FavList\"\r\nimport cityService from \"../services/cityService\"\r\n\r\nexport class Fav extends React.Component {\r\n\r\n    state = {\r\n        favCities: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFavCitiesArray()\r\n    }\r\n\r\n    getFavCitiesArray = async () => {\r\n        var favCityArray = await cityService.queryFav()\r\n        this.setState({\r\n            favCities: favCityArray\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"fav-container main-container flex column align-center \">\r\n            <div className=\"main-layout\">\r\n                <h3>My favorites locations:</h3>\r\n            </div>\r\n            {(this.state.favCities) && <FavList favCitiesArray={this.state.favCities} />}\r\n            {(!this.state.favCities) && <div className=\"fav-page-msg main-layout\">\r\n                <p>Your list is empty</p>\r\n                <div className=\"list-container\"></div>\r\n            </div>}\r\n        </div>\r\n    }\r\n}","export function AppFooter() {\r\n    return (\r\n        <footer className=\"flex justify-center\">\r\n            <small>Created by Dina K üíç 2021</small>\r\n        </footer>\r\n    )\r\n}","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { AppHeader } from './cmps/AppHeader.jsx'\nimport { Home } from './pages/Home.jsx'\nimport { Fav } from './pages/Fav.jsx'\nimport { AppFooter } from './cmps/AppFooter.jsx'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'weather-icons/css/weather-icons.css'\n\nexport function App() {\n  return (<React.Fragment>\n    <div className=\"app\">\n      <AppHeader />\n      <Switch>\n        <Route component={Fav} path=\"/favorites\" />\n        <Route component={Home} path=\"/\" />\n      </Switch>\n      <AppFooter />\n    </div>\n  </React.Fragment>\n  )\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware, compose} from 'redux'\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore( composeEnhancers(applyMiddleware(thunk)));","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/scss/main.scss'\nimport { App } from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport {store} from './store/store'\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}